{"version":3,"sources":["assets/images/hero.jpg","assets/images/logo-white.png","component/Header/StyledHeader.js","component/Button/StyledLinkButton.js","component/Button/LinkButton.js","component/NavigationItems/NavigationItem/NavigationItem.js","component/NavigationItems/NavigationItems.js","component/Header/Header.js","container/HomePage/StyledHomePage.js","container/HomePage/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","StyledHeader","styled","header","backimg","StyledNav","nav","color","BaseLinkButton","Styled","a","FullLinkButton","GhostLinkButton","props","buttonElement","type","children","exact","to","path","activeStyle","borderBottom","paddingBottom","Styledul","ul","NavigationItem","src","logo","alt","NavigationItems","className","LinkButton","href","StyledSection","section","StyledFlexDiv","div","homePage","Fragment","Header","icon","faInfinity","faStopwatch","faUnlock","faCartPlus","App","component","HomePage","Boolean","window","location","hostname","match","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gHAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,4rCCI3C,IAAMC,EAAeC,IAAOC,OAAV,IAC2DC,KA8BvEC,EAAYH,IAAOI,IAAV,K,q0BCjCf,IAAMC,EACK,UADLA,EAES,UAITC,EAAiBC,IAAOC,EAAV,KAgBdC,EAAiBF,YAAOD,EAAPC,CAAH,IAKOF,EACAA,EAMAA,GAKrBK,EAAkBH,YAAOD,EAAPC,CAAH,IAGMF,EACXA,EAIWA,GCzCZ,WAACM,GAEZ,IAAIC,EAAc,KAElB,OAAOD,EAAME,MACT,IAAK,OACDD,EAAgB,kBAACH,EAAmBE,EAAQA,EAAMG,UAClD,MACJ,IAAK,QACDF,EAAgB,kBAACF,EAAoBC,EAAQA,EAAMG,UACnD,MACJ,QACIF,EAAgB,kBAACN,EAAmBK,EAAQA,EAAMG,UAI1D,OAAOF,G,yBCrBI,WAACD,GAEZ,OACI,4BACI,kBAAC,IAAD,CAASI,OAAK,EAACC,GAAIL,EAAMM,KAAMC,YAAa,CAACC,aAAa,oBAAoBC,cAAc,QAAST,EAAMG,Y,6hBCHvH,IAAMO,EAAWrB,IAAOsB,GAAV,KAwBC,WAACX,GAEZ,OACI,kBAACU,EAAD,KACI,kBAACE,EAAD,CAAgBN,KAAK,KAArB,iBACA,kBAACM,EAAD,CAAgBN,KAAK,QAArB,gBACA,kBAACM,EAAD,CAAgBN,KAAK,WAArB,cACA,kBAACM,EAAD,CAAgBN,KAAK,WAArB,aCNGhB,EApBA,WACX,OAGI,kBAACF,EAAD,KACI,kBAACI,EAAD,KACI,yBAAKqB,IAAKC,IAAMC,IAAI,kBACpB,kBAACC,EAAD,OAEJ,yBAAKC,UAAU,iBACX,iDAAsB,6BAAtB,+BACA,yBAAKA,UAAU,aACX,kBAACC,EAAD,CAAYC,KAAK,IAAIjB,KAAK,QAA1B,mBACA,kBAACgB,EAAD,CAAYC,KAAK,IAAIjB,KAAK,SAA1B,oB,mZCnBpB,IAAMkB,EAAgB/B,IAAOgC,QAAV,KAiBbC,EAAgBjC,IAAOkC,IAAV,K,gBC+BJC,EAzCE,WAEb,OACI,kBAAC,IAAMC,SAAP,KACI,kBAACC,EAAD,MAEA,kBAACN,EAAD,KACI,wBAAIH,UAAU,mBAAd,uCAGJ,kBAACG,EAAD,KACI,kBAACE,EAAD,KACI,yBAAKL,UAAU,qBACX,mDACA,kBAAC,IAAD,CAAiBU,KAAMC,MACvB,oMAEJ,yBAAKX,UAAU,qBACX,mDACA,kBAAC,IAAD,CAAiBU,KAAME,MACvB,oNAEJ,yBAAKZ,UAAU,qBACX,4CACA,kBAAC,IAAD,CAAiBU,KAAMG,MACvB,4MAEJ,yBAAKb,UAAU,qBACX,8CACA,kBAAC,IAAD,CAAiBU,KAAMI,MACvB,4M,OCvBTC,MAbf,WACE,OACE,kBAAC,IAAMP,SAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOnB,KAAK,OAAO2B,UAAWC,IAC9B,kBAAC,IAAD,CAAO5B,KAAK,UAAU2B,UAAWC,IACjC,kBAAC,IAAD,CAAO5B,KAAK,UAAU2B,UAAWC,IACjC,kBAAC,IAAD,CAAO9B,OAAK,EAACE,KAAK,IAAI2B,UAAWC,OCCrBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXN,IAAMC,EACF,kBAAC,IAAD,KACI,kBAAC,EAAD,OAKRC,IAASC,OAAOF,EAAKG,SAASC,eAAe,SDqHvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.2459a292.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hero.6923d550.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo-white.93f9c925.png\";","import styled from 'styled-components'\r\nimport backimg from '../../assets/images/hero.jpg'\r\n\r\n\r\nconst StyledHeader = styled.header`\r\n    background-image:linear-gradient(rgba(0,0,0,0.7),rgba(0,0,0,0.7)), url(${backimg});\r\n    background-size: cover;\r\n    background-position: center;\r\n    height:100vh;\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:center;\r\n    align-items:center;\r\n\r\n    .text-hero-all {\r\n       \r\n        .text-hero {\r\n            display:flex;\r\n\r\n            \r\n        }\r\n    }\r\n\r\n    h1 {\r\n        margin-top:0;\r\n        margin-bottom:1rem;\r\n        color:#fff;\r\n        font-size:2.4rem;\r\n        font-weight:300;\r\n        text-transform:uppercase;\r\n        letter-spacing:1px;\r\n        word-spacing:4px;\r\n    }\r\n`\r\n\r\nconst StyledNav = styled.nav`\r\n\r\n    position:absolute;\r\n    height:auto;\r\n    width:100%;\r\n    display:flex;\r\n    justify-content:space-between;\r\n    align-items:center;\r\n    left:0;\r\n    top:0;\r\n    img {\r\n        margin-top:20px;\r\n        margin-left:40px;\r\n        height:100px;\r\n        width:auto;\r\n    }\r\n`\r\n\r\n\r\n\r\nexport {StyledHeader,StyledNav}","import Styled from 'styled-components'\r\n\r\nconst color = {\r\n    orange:\"#e67e22\",\r\n    darkOrange:\"#924d10\"\r\n}\r\n\r\n\r\nconst BaseLinkButton = Styled.a`\r\n    \r\n\r\n    &:link,&:visited{\r\n        display:inline-block;\r\n        padding:10px 30px;\r\n        font-weight:300;\r\n        text-decoration:none;\r\n        border-radius:200px;\r\n        transition: all .2s;\r\n    }\r\n\r\n    \r\n    \r\n`\r\n\r\nconst FullLinkButton = Styled(BaseLinkButton)`\r\n\r\n\r\n    &:link,&:visited{\r\n        margin-right:15px;\r\n        background-color:${color.orange};\r\n        border:1px solid ${color.orange};\r\n        color:#fff;\r\n        \r\n    }\r\n    \r\n    &:hover,&:active{\r\n        background-color:${color.darkOrange};\r\n    }\r\n    \r\n`\r\n\r\nconst GhostLinkButton = Styled(BaseLinkButton)`\r\n\r\n    &:link,&:visited{\r\n        border:1px solid ${color.orange};\r\n        color:${color.orange};\r\n    }\r\n\r\n    &:hover,&:active{\r\n        background-color:${color.darkOrange};\r\n        color:white;\r\n    }\r\n`\r\n\r\n\r\n\r\n\r\nexport {\r\n    BaseLinkButton,\r\n    FullLinkButton,\r\n    GhostLinkButton\r\n}","import React from 'react'\r\nimport {\r\n    BaseLinkButton,\r\n    FullLinkButton,\r\n    GhostLinkButton\r\n} from './StyledLinkButton'\r\n\r\n\r\nexport default (props) => {\r\n    \r\n    let buttonElement=null; \r\n\r\n    switch(props.type){\r\n        case \"full\":\r\n            buttonElement = <FullLinkButton {...props}>{props.children}</FullLinkButton>\r\n            break\r\n        case \"ghost\":\r\n            buttonElement = <GhostLinkButton {...props}>{props.children}</GhostLinkButton>\r\n            break\r\n        default:\r\n            buttonElement = <BaseLinkButton {...props}>{props.children}</BaseLinkButton>\r\n            break\r\n    }\r\n\r\n    return buttonElement;\r\n}\r\n    ","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nexport default (props) => {\r\n\r\n    return (\r\n        <li>\r\n            <NavLink exact to={props.path} activeStyle={{borderBottom:\"2px solid #e67e22\",paddingBottom:\"8px\"}}>{props.children}</NavLink>\r\n        </li>\r\n    )\r\n}","import React from 'react'\r\nimport NavigationItem from './NavigationItem/NavigationItem'\r\nimport styled from 'styled-components'\r\n\r\nconst Styledul = styled.ul`\r\n    list-style:none;\r\n    display:flex;\r\n    justify-content:space-between;\r\n    margin-right:20px;\r\n    li {\r\n        margin:0px 20px;\r\n        a {\r\n            &:link,&:visited{\r\n                color:white;\r\n                text-decoration:none;\r\n                text-transform:uppercase;\r\n                font-size:.9rem;\r\n                padding-bottom:\"8px\";\r\n                border-bottom:\"2px solid transparent\"\r\n            }\r\n\r\n            \r\n        }\r\n    }\r\n`\r\n\r\n\r\n\r\nexport default (props) => {\r\n\r\n    return (\r\n        <Styledul>\r\n            <NavigationItem path=\"/\">Food delivery</NavigationItem>\r\n            <NavigationItem path=\"/how\">How it works</NavigationItem>\r\n            <NavigationItem path=\"/cities\">Our cities</NavigationItem>\r\n            <NavigationItem path=\"/signup\">Sign up</NavigationItem>\r\n        </Styledul>\r\n    )\r\n}","import React from 'react'\r\nimport {\r\n    StyledHeader,\r\n    StyledNav\r\n} from './StyledHeader'\r\nimport LinkButton from '../Button/LinkButton'\r\nimport logo from '../../assets/images/logo-white.png'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\n\r\nconst header = () => {\r\n    return (\r\n\r\n        \r\n        <StyledHeader>\r\n            <StyledNav>\r\n                <img src={logo} alt=\"omnifood logo\"/>\r\n                <NavigationItems/>\r\n            </StyledNav>\r\n            <div className=\"text-hero-all\">\r\n                <h1>Goodbye junk food.<br/> Hello super healthy meals.</h1>\r\n                <div className=\"text-hero\">\r\n                    <LinkButton href=\"#\" type=\"full\">I’m hungry</LinkButton>\r\n                    <LinkButton href=\"#\" type=\"ghost\">Show me more</LinkButton>\r\n                </div>\r\n            </div>\r\n        </StyledHeader>\r\n    )\r\n}\r\n\r\nexport default header;","import styled from 'styled-components'\r\n\r\n\r\nconst StyledSection = styled.section`\r\n    width:80%;\r\n    margin:auto;\r\n\r\n    .section-0_title {\r\n        text-align:center;\r\n    }\r\n\r\n    .section-1_content {\r\n        width:18%;\r\n        p{\r\n            text-align:justify;\r\n        }\r\n    }\r\n`\r\n\r\n\r\nconst StyledFlexDiv = styled.div`\r\n    display:flex;\r\n    justify-content:space-between;\r\n`\r\n\r\nexport {\r\n    StyledSection,\r\n    StyledFlexDiv\r\n}","import React from 'react'\r\nimport Header from '../../component/Header/Header'\r\nimport {\r\n    StyledSection,\r\n    StyledFlexDiv\r\n} from './StyledHomePage'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faInfinity,faStopwatch,faUnlock,faCartPlus} from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nconst homePage = () => {\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <Header/>\r\n\r\n            <StyledSection>\r\n                <h2 className=\"section-0_title\">Get food fast — not fast food</h2>\r\n            </StyledSection>\r\n\r\n            <StyledSection>\r\n                <StyledFlexDiv>\r\n                    <div className=\"section-1_content\">\r\n                        <h3>Up to 365 days/year</h3>\r\n                        <FontAwesomeIcon icon={faInfinity}/>\r\n                        <p>Never cook again! We really mean that. Our subscription plans include up to 365 days/year coverage. You can also choose to order more flexibly if that's your style.</p>\r\n                    </div>\r\n                    <div className=\"section-1_content\">\r\n                        <h3>Ready in 20 minutes</h3>\r\n                        <FontAwesomeIcon icon={faStopwatch}/>\r\n                        <p>You're only twenty minutes away from your delicious and super healthy meals delivered right to your home. We work with the best chefs in each town to ensure that you're 100% happy.</p>\r\n                    </div>\r\n                    <div className=\"section-1_content\">\r\n                        <h3>100% organic</h3>\r\n                        <FontAwesomeIcon icon={faUnlock}/>\r\n                        <p>All our vegetables are fresh, organic and local. Animals are raised without added hormones or antibiotics. Good for your health, the environment, and it also tastes better!</p>\r\n                    </div>\r\n                    <div className=\"section-1_content\">\r\n                        <h3>Order anything</h3>\r\n                        <FontAwesomeIcon icon={faCartPlus}/>\r\n                        <p>We don't limit your creativity, which means you can order whatever you feel like. You can also choose from our menu containing over 100 delicious meals. It's up to you!</p>\r\n                    </div>             \r\n                </StyledFlexDiv>\r\n            </StyledSection>\r\n        </React.Fragment>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default homePage;","import React from 'react';\r\nimport HomePage from './container/HomePage/HomePage'\r\nimport {Switch,Route} from 'react-router-dom'\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <Switch>\r\n        <Route path=\"/how\" component={HomePage}/>\r\n        <Route path=\"/cities\" component={HomePage}/>\r\n        <Route path=\"/signup\" component={HomePage}/>\r\n        <Route exact path=\"/\" component={HomePage}/>\r\n      </Switch>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst app = (\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>\r\n)\r\n\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}